@page "/"
@rendermode InteractiveServer
@layout NoNavLayout
@inject UserData userdata
@inject NavigationManager nav


@if (!loaded)
{
    
    <MudStack Class="d-flex flex-wrap align-content-start flex-grow-1" MaxWidth="MaxWidth.Large">
        <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.Small">
            <MudPaper Class="pa-4">
                <h6>Loading...</h6>
            </MudPaper>
        </MudContainer>
    </MudStack>
}
else if (!string.IsNullOrWhiteSpace(message))
{
    <MudStack Class="d-flex flex-wrap align-content-start flex-grow-1" MaxWidth="MaxWidth.Large">
        <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.Small">
            <MudPaper Class="pa-4">
                <MudAlert Severity="Severity.Error" Elevation="2" Class="mt-2">
                    Unable to load data from database. Please reload the site.
                </MudAlert>
                <MudButton OnClick="Reload" Variant="Variant.Outlined" Color="Color.Primary" Class="ml-auto mt-3">Reload</MudButton>
            </MudPaper>
        </MudContainer>
    </MudStack>
}
else
{
    nav.NavigateTo("/home");
}

@code {

    private string message = string.Empty;
    private bool loaded;
    private bool ableToLoadData;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            loaded = false;
            userdata.Users = new List<UserModel>();
            try
            {
                await userdata.GetAllUsers();
                loaded = true;
                ableToLoadData = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                message = ex.Message;
                loaded = true;
                StateHasChanged();
            }
        }
    }

    private void Reload()
    {
        nav.NavigateTo("/", forceLoad: true);
    }
}
